// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;

public class PlayerAI : MonoBehaviour
{
	PATileTerrain terrain;

	public PlayerAI() {
		speed = 0.3f;
		health = 100;
		numberOfUpgrades = 0;
	}

	public enum MoveDirection {
		Up,
		Down,
		Right,
		Left
	}

	public float health { get; set; }
	public int numberOfUpgrades { get; set; }

	public MoveDirection direction { get; set; }
	public float speed { get; set; }

	// Use this for initialization
	void Start () {
		direction = MoveDirection.Right;

		GameObject go = GameObject.Find("Tile Map");
		if (go != null) terrain = go.GetComponent<PATileTerrain>();
	}
	
	// Update is called once per frame
	void Update () {
		this.updateHealth();
		this.movePlayer();
	}

	void updateHealth() {
		health -= numberOfUpgrades * Time.deltaTime;
		if (health <= 0) {
			this.SendMessage ("playerDead");
			return;
		}
	}
	
	void movePlayer() {
		Vector3 position = transform.localPosition;
		if (direction == MoveDirection.Right && position.x >= terrain.width) {
			direction = MoveDirection.Up;
		} else if (direction == MoveDirection.Up && position.z >= terrain.height) {
			direction = MoveDirection.Left;
		} else if (direction == MoveDirection.Left && position.x <= 0) {
			direction = MoveDirection.Down;
		} else if (direction == MoveDirection.Down && position.z <= 0) {
			direction = MoveDirection.Right;
		}
		
		switch (direction) {
		case MoveDirection.Down:
			position.z -= speed;
			break;
		case MoveDirection.Left:
			position.x -= speed;
			break;
		case MoveDirection.Right:
			position.x += speed;
			break;
		case MoveDirection.Up:
			position.z += speed;
			break;
		}
		transform.localPosition = position;
	}

	void playerDead() {
		Application.LoadLevel ("game over");
	}
}


